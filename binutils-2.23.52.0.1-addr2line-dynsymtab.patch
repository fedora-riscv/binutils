*** ../binutils-2.23.52.0.1/binutils/addr2line.c	2013-02-27 20:28:03.000000000 +0000
--- binutils/addr2line.c	2013-03-13 16:46:36.109519735 +0000
*************** slurp_symtab (bfd *abfd)
*** 130,135 ****
--- 130,146 ----
      symcount = bfd_canonicalize_symtab (abfd, syms);
    if (symcount < 0)
      bfd_fatal (bfd_get_filename (abfd));
+ 
+   /* If there are no symbols left after canonicalization and
+      we have not tried the dynamic symbols then give them a go.  */
+   if (symcount == 0
+       && ! dynamic
+       && (storage = bfd_get_dynamic_symtab_upper_bound (abfd)) > 0)
+     {
+       free (syms);
+       syms = xmalloc (storage);
+       symcount = bfd_canonicalize_dynamic_symtab (abfd, syms);
+     }
  }
  
  /* These global variables are used to pass information between
*** ../binutils-2.23.52.0.1.orig/bfd/opncls.c	2013-03-14 11:25:30.338306122 +0000
--- bfd/opncls.c	2013-03-14 12:20:21.686397360 +0000
*************** find_separate_debug_file (bfd *abfd, con
*** 1297,1302 ****
--- 1297,1304 ----
        bfd_malloc (strlen (debug_file_directory) + 1
                    + (canon_dirlen > dirlen ? canon_dirlen : dirlen)
                    + strlen (".debug/")
+ #define FEDORA_LIB_DEBUG_DIR "/usr/lib/debug/"
+ 		  + strlen (FEDORA_LIB_DEBUG_DIR) + strlen ("usr/")
                    + strlen (base)
                    + 1);
    if (debugfile == NULL)
*************** find_separate_debug_file (bfd *abfd, con
*** 1332,1337 ****
--- 1334,1359 ----
        return debugfile;
      }
  
+   /* Then try in the global debug dir for Fedora libraries.  */
+   sprintf (debugfile, "%s%s%s", FEDORA_LIB_DEBUG_DIR, dir, base);
+   if (separate_debug_file_exists (debugfile, crc32))
+     {
+       free (base);
+       free (dir);
+       free (canon_dir);
+       return debugfile;
+     }
+ 
+   /* Then try in the usr subdirectory of the global debug dir for Fedora libraries.  */
+   sprintf (debugfile, "%s/usr%s%s", FEDORA_LIB_DEBUG_DIR, dir, base);
+   if (separate_debug_file_exists (debugfile, crc32))
+     {
+       free (base);
+       free (dir);
+       free (canon_dir);
+       return debugfile;
+     }
+   
    /* Then try in the global debugfile directory.  */
    strcpy (debugfile, debug_file_directory);
    dirlen = strlen (debug_file_directory) - 1;
